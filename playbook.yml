---
- hosts: kube-cluster
  become: yes
  gather_facts: yes
  tasks:
    - name: "apt update"
      apt:
          update_cache: yes
          cache_valid_time: 3600
    - name: Disable system swap
      shell: "swapoff -a"
      run_once: True

    - name: Remove current swaps from fstab
      lineinfile:
        dest: /etc/fstab
        regexp: '(?i)^([^#][\S]+\s+(none|swap)\s+swap.*)'
        line: '# \1'
        backrefs: yes
        state: present
      run_once: True


- hosts: master
  become: yes
  gather_facts: yes
  become_user: root
  roles:
    - { role: docker, tags: ['docker']}
    - { role: kubernetes, tags: ['kubernetes']}

- hosts: master
  vars_files:
    - group_vars/all.yml
  become_user: root
  gather_facts: yes
  become: yes
  tasks:
    - name: Reset Kubernetes
      shell: kubeadm reset --force
      register: reset_cluster
      ignore_errors: True


    - name: Initializing kubernetes
      register: init_cluster
      when: reset_cluster is succeeded
      shell:
        kubeadm init --service-cidr {{ service_cidr }} \
          --pod-network-cidr {{ pod_network_cidr }} \
          --token {{ token }} \
          --apiserver-advertise-address {{ master_ip }} \
          {{ kubeadm_opts }} \
          {{ init_opts }}


    - name: Create Kubernetes config directory
      file:
        path: ".kube/"
        state: directory

    - name: "Configuring kubectl for Root User"
      shell: mkdir -p $HOME/.kube;cp /etc/kubernetes/admin.conf $HOME/.kube/config;chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Copy admin.conf to Home directory
      when: init_cluster is succeeded
      copy:
        src: "{{ kubeadmin_config }}"
        dest: ".kube/config"
        owner: "{{ ansible_user | default(ansible_user_id) }}"
        group: "{{ ansible_user | default(ansible_user_id) }}"
        mode: 0755
        remote_src: true

    - name: Configuring Kubernetes Network
      shell: |
        kubectl apply -f  https://docs.projectcalico.org/v3.10/manifests/canal.yaml
      when: init_cluster is succeeded

    - name: Configuring single node cluster
      shell: kubectl taint nodes --all node-role.kubernetes.io/master-


- hosts: ubuntu
  become_user: root
  gather_facts: yes
  become: yes
  tasks:
    - name: Run Jenkins in a container
      shell: docker run -d -p 8080:8080 jenkins/jenkins:lts

